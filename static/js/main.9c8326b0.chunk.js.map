{"version":3,"sources":["components/RecordDetail.js","components/Records.js","firebase.js","components/AddRecordDialog.js","App.js","reportWebVitals.js","index.js"],"names":["RecordDetail","props","currentRecord","getScoreValue","score","component","sx","p","minHeight","width","xs","md","Card","CardContent","Typography","fontSize","color","gutterBottom","name","mb","address","display","alignItems","Rating","value","ratingFromTing","readOnly","ratingFromYu","precision","CardActions","Button","size","Item","styled","Paper","theme","typography","body2","textAlign","height","lineHeight","marginBottom","borderRadius","boxShadow","paddingTop","paddingBottom","Title","fontWeight","Records","recordData","onRecordClick","borderRight","map","record","index","onClick","scoreOne","scoreTwo","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","mockRestaurants","mockRestaurantTypes","Transition","React","forwardRef","ref","Slide","direction","iOSBoxShadow","IOSSlider","Slider","palette","mode","padding","backgroundColor","top","text","primary","background","border","opacity","AddRecordDialog","open","onClose","onSave","useState","setName","type","setType","setAddress","setRatingFromTing","setRatingFromYu","Dialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","ml","flex","variant","autoFocus","DialogContent","DialogContentText","m","Autocomplete","freeSolo","onChange","event","newValue","onInputChange","e","target","id","options","renderInput","params","TextField","label","margin","fullWidth","valueLabelDisplay","App","isDialogOpen","setIsDialogOpen","data","isFetching","records","setRecords","isVisible","setCurrentRecord","useEffect","fetchData","a","docDef","collection","getDocs","forEach","doc","prev","handleSaveRecord","setDoc","then","Box","justifyContent","CircularProgress","current","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8326b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Rating from \"@mui/material/Rating\";\r\n\r\nexport default function RecordDetail(props) {\r\n  const { currentRecord } = props;\r\n  const getScoreValue = (score) => {\r\n    return (score / 100) * 5;\r\n  };\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      sx={{\r\n        p: 2,\r\n        minHeight: 500,\r\n        width: { xs: \"50%\", md: \"30%\" },\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            {currentRecord.name}\r\n          </Typography>\r\n          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n            {currentRecord.address}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              width: 200,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Box>昱:</Box>\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={getScoreValue(currentRecord.ratingFromTing)}\r\n              readOnly\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              width: 200,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Box>俞:</Box>\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={getScoreValue(currentRecord.ratingFromYu)}\r\n              precision={0.1}\r\n              readOnly\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  textAlign: \"center\",\r\n  height: 60,\r\n  lineHeight: \"60px\",\r\n  marginBottom: 10,\r\n  borderRadius: \"0.5rem\",\r\n  boxShadow: \"0.1rem 0.1rem 0.5rem rgba(0, 0, 0, 0.171)\",\r\n  paddingTop: 5,\r\n  paddingBottom: 5,\r\n}));\r\n\r\nconst Title = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  fontWeight: 700,\r\n  textAlign: \"center\",\r\n}));\r\n\r\nexport default function Records(props) {\r\n  const { recordData, onRecordClick } = props;\r\n  const getAverageScore = (scoreOne, scoreTwo) => {\r\n    return ((scoreOne + scoreTwo) / 200) * 5;\r\n  };\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      sx={{\r\n        p: 2,\r\n        borderRight: \"0.2rem solid rgba(58, 58, 58, 0.548)\",\r\n        minHeight: 500,\r\n        width: { xs: \"50%\", md: \"30%\" },\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {recordData.map((record, index) => {\r\n        return (\r\n          <Item key={index} onClick={() => onRecordClick(record.name)}>\r\n            <Title component=\"p\">{record.name}</Title>\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={getAverageScore(\r\n                record.ratingFromTing,\r\n                record.ratingFromYu\r\n              )}\r\n              readOnly\r\n              precision={0.1}\r\n              size=\"small\"\r\n            />\r\n          </Item>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAI1e01gflhrCelYdiUdzcHq1h8P_ngkLM\",\r\n  authDomain: \"restaurant-records.firebaseapp.com\",\r\n  projectId: \"restaurant-records\",\r\n  storageBucket: \"restaurant-records.appspot.com\",\r\n  messagingSenderId: \"344173900500\",\r\n  appId: \"1:344173900500:web:0c8b625cd6acf647094141\",\r\n  measurementId: \"G-EDVP9VPNEG\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst mockRestaurants = [\"和美冰果室\", \"蘿蔔蹲\", \"盈咖哩\"];\r\nconst mockRestaurantTypes = [\"小吃\", \"牛排\", \"義大利麵\", \"火鍋\"];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst iOSBoxShadow =\r\n  \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\";\r\n\r\nconst IOSSlider = styled(Slider)(({ theme }) => ({\r\n  color: theme.palette.mode === \"dark\" ? \"#3880ff\" : \"#3880ff\",\r\n  height: 2,\r\n  padding: \"15px 0\",\r\n  \"& .MuiSlider-thumb\": {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: iOSBoxShadow,\r\n    \"&:focus, &:hover, &.Mui-active\": {\r\n      boxShadow:\r\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\r\n      // Reset on touch devices, it doesn't add specificity\r\n      \"@media (hover: none)\": {\r\n        boxShadow: iOSBoxShadow,\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSlider-valueLabel\": {\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    top: -6,\r\n    backgroundColor: \"unset\",\r\n    color: theme.palette.text.primary,\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"& *\": {\r\n      background: \"transparent\",\r\n      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n    },\r\n  },\r\n  \"& .MuiSlider-track\": {\r\n    border: \"none\",\r\n  },\r\n  \"& .MuiSlider-rail\": {\r\n    opacity: 0.5,\r\n    backgroundColor: \"#bfbfbf\",\r\n  },\r\n  \"& .MuiSlider-mark\": {\r\n    backgroundColor: \"#bfbfbf\",\r\n    height: 8,\r\n    width: 1,\r\n    \"&.MuiSlider-markActive\": {\r\n      opacity: 1,\r\n      backgroundColor: \"currentColor\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddRecordDialog(props) {\r\n  const { open, onClose, onSave } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [ratingFromTing, setRatingFromTing] = useState(60);\r\n  const [ratingFromYu, setRatingFromYu] = useState(60);\r\n\r\n  const handleSaveClick = () => {\r\n    onSave({ name, type, address, ratingFromTing, ratingFromYu });\r\n  };\r\n  const handleNameChange = (event, newValue) => setName(newValue);\r\n\r\n  const handleNameInputChange = (e) => setName(e.target.value);\r\n\r\n  const handleTypeChange = (event, newValue) => setType(newValue);\r\n\r\n  const handleTypeInputChange = (e) => setType(e.target.value);\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={onClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={onClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              新增餐廳紀錄\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSaveClick}>\r\n              儲存\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            記錄留起來，看看我們到底懂不懂吃\r\n          </DialogContentText>\r\n          <Box sx={{ m: 3 }} />\r\n          <Autocomplete\r\n            freeSolo\r\n            onChange={handleNameChange}\r\n            onInputChange={handleNameInputChange}\r\n            id=\"combo-box-demo\"\r\n            value={name}\r\n            options={mockRestaurants}\r\n            renderInput={(params) => <TextField {...params} label=\"餐廳名稱\" />}\r\n          />\r\n          <Box sx={{ m: 3 }} />\r\n          <Autocomplete\r\n            freeSolo\r\n            onChange={handleTypeChange}\r\n            onInputChange={handleTypeInputChange}\r\n            id=\"combo-box-demo\"\r\n            value={type}\r\n            options={mockRestaurantTypes}\r\n            renderInput={(params) => <TextField {...params} label=\"餐廳種類\" />}\r\n          />\r\n          <Box sx={{ m: 3 }} />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"餐廳地址\"\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            fullWidth\r\n          />\r\n          <Box sx={{ m: 3 }} />\r\n          <Typography sx={{ mb: 3 }}>方俞的評分</Typography>\r\n          <IOSSlider\r\n            aria-label=\"ios slider\"\r\n            onChange={(e) => setRatingFromYu(e.target.value)}\r\n            value={ratingFromYu}\r\n            valueLabelDisplay=\"on\"\r\n          />\r\n          <Box sx={{ m: 3 }} />\r\n          <Typography sx={{ mb: 3 }}>昱廷的評分</Typography>\r\n          <IOSSlider\r\n            aria-label=\"ios slider\"\r\n            onChange={(e) => setRatingFromTing(e.target.value)}\r\n            value={ratingFromTing}\r\n            valueLabelDisplay=\"on\"\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport RecordDetail from \"./components/RecordDetail\";\nimport Records from \"./components/Records\";\nimport db from \"./firebase\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  setDoc,\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport AddRecordDialog from \"./components/AddRecordDialog\";\n\nfunction App() {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [records, setRecords] = useState({\n    data: [],\n    isFetching: true,\n  });\n  const [currentRecord, setCurrentRecord] = useState({\n    isVisible: false,\n    data: {},\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const docDef = collection(db, \"restaurant-records\");\n      const snap = await getDocs(docDef);\n      snap.forEach((doc) => {\n        setRecords((prev) => ({\n          isFetching: false,\n          data: [...prev.data, doc.data()],\n        }));\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const handleDialogOpen = () => setIsDialogOpen(true);\n  const handleDialogClose = () => setIsDialogOpen(false);\n\n  const handleSaveRecord = async (data) => {\n    setRecords((prev) => ({\n      ...prev,\n      isFetching: true,\n    }));\n    await setDoc(doc(db, \"restaurant-records\", data.name), {\n      ...data,\n    }).then(() => {\n      setRecords((prev) => ({\n        isFetching: false,\n        data: [...prev.data, data],\n      }));\n      setIsDialogOpen(false);\n    });\n  };\n\n  const handleRecordClick = (name) => {\n    const current = records.data.find((record) => record.name === name);\n    setCurrentRecord({\n      isVisible: true,\n      data: current,\n    });\n  };\n\n  return (\n    <Box>\n      {records.isFetching ? (\n        <Box\n          sx={{\n            height: \"80vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          <Box\n            component=\"div\"\n            sx={{\n              display: \"flex\",\n              justifyContent: { xs: \"flex-start\", md: \"center\" },\n            }}\n          >\n            <Records\n              recordData={records.data}\n              onRecordClick={handleRecordClick}\n            />\n            {currentRecord.isVisible && (\n              <RecordDetail currentRecord={currentRecord.data} />\n            )}\n          </Box>\n          <Box sx={{ m: 2, display: \"flex\" }}>\n            <Button\n              variant=\"contained\"\n              sx={{ width: \"100%\" }}\n              onClick={handleDialogOpen}\n            >\n              新增紀錄\n            </Button>\n          </Box>\n          <AddRecordDialog\n            onClose={handleDialogClose}\n            open={isDialogOpen}\n            onSave={handleSaveRecord}\n          />\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}